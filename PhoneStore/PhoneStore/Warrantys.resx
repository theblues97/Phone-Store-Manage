<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnWaPhoneNumFill.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANeSURBVFhH7ZdLaBNRFIarKIKi6MK9C1240E1RFy6MJpNmXmnM5ObRVmgVivgWEQQRiy506wuL
        tlqffbeaan1UqRQUlL6tQSy6sFpqowhqpTXTOd4zOQUpts6kDxT8YCDJ3Puff865c+5N2n/+GdzuTfNc
        SsDhVALZgsQ2OSUmOHy+hXR76nDLLN2tBqMZ3mDCJQfg14v/PuzJDDc6Zf96Gj55OByOWYISOCEoDLRI
        HhSeL4Hm1nZ42/MOet71QsfzF1BytQxyNm8zzWSowXJVVefS9ImBwT2ZobsofLqwGAYGvsNYJBIJqKyJ
        Ah8P4sZIx1qvdz7JpA4PfBKD36i7Q2HG58PwV6hobQTRF8GyRLnEjKRSCjhV/ypM+6mzRST/Zz4aA9Ch
        90L9vYdmOQQ5wEjOPhneUL0/nDdu2sfCMAzYsfcAz0S4m+TsIYrZC3gK9cKiSyRpj0EjAdEHySy45NBy
        krUOvts4uaWtgyTt0a6/h+r+lmQZFG0ryVqHN5hcnPy+t48k7RHT+6Bm6DlIG7MM3rSOkqx1nDLbggb6
        PvSTpD1e6v1QPdQJqpbDDWjHSNY6LpnJaKAr9pIk7dGS6IHaz21mCZyStotkrSOKbDGfbFwtrSJJ6wyD
        Abd+xOBC0y3TwAaFrSZZe3h8kae5+TtB13WStka3HjfTv//wERAzw/GCgoKZJGkPvnolfAKrXRCJG9+g
        li++y833U0//r7hVVsd3OaOzK0Yhfg+mHZ/8Bg9e/vYJ+CO5fE8Id4miOIekUgMbkuSLvOKXca+h0exw
        I3wxBs3VjgvuNq85pr3k2V0KHvrk8YSXkMzEkOWsRbwtN2BKt+85AGgk/vETdPKej0Er4s1Q/CgK+w4V
        mGnHJ8fggqwV8bfpYIaXLeXlXEZyqYELCU9Aki/8BoNQIGw05mf6Hseaj6Qd3/+Re3gJMruI27spOBFc
        ElvhlAPbsMNx4eN8x9ztlrQ1o1e706utxMAnzpwD3FNME2qwYlJMWAGNYlA8LSHXK2qm34SgBEvxTFFz
        8/YoE4HrNGRqSU/Pny2orBpNVNXWmSZKrpTRutBcNGxqMU0orBKDXiurhkdNj5MGJJZFQ6YerLlbYdeS
        T47H+NBr7DF0e/rg5ViH50T8c0M//edvIS3tJ3rsOWwDeReaAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>